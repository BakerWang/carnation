<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinco.carnation.user.mapper.RebateLogMapper">
	<resultMap id="BaseResultMap" type="com.sinco.carnation.user.model.RebateLog">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="order_id" property="orderId" jdbcType="BIGINT" />
		<result column="rebate_code" property="rebateCode" jdbcType="VARCHAR" />
		<result column="rebate_type" property="rebateType" jdbcType="VARCHAR" />
		<result column="rebate_status" property="rebateStatus"
			jdbcType="BIT" />
		<result column="error_msg" property="errorMsg" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="BOResultMap" type="com.sinco.carnation.user.bo.RebateLogBO"
		extends="BaseResultMap" />
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, order_id, rebate_code, rebate_type, rebate_status, error_msg,
		create_time
	</sql>
	<select id="selectByExample" parameterType="com.sinco.carnation.user.model.RebateLogExample"
		resultMap="BOResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user_rebate_log
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BOResultMap">
		select
		<include refid="Base_Column_List" />
		from user_rebate_log
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user_rebate_log
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.sinco.carnation.user.model.RebateLogExample">
		delete from user_rebate_log
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.sinco.carnation.user.model.RebateLog"
		useGeneratedKeys="true" keyProperty="id">
		insert into user_rebate_log (id, order_id, rebate_code, rebate_type,
		rebate_status, error_msg, create_time
		)
		values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{rebateCode},
		#{rebateType,jdbcType=VARCHAR},
		#{rebateStatus,jdbcType=BIT}, #{errorMsg,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.sinco.carnation.user.model.RebateLog"
		useGeneratedKeys="true" keyProperty="id">
		insert into user_rebate_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="orderId != null">
				order_id,
			</if>
			<if test="rebateCode != null">
				rebate_code,
			</if>
			<if test="rebateType != null">
				rebate_type,
			</if>
			<if test="rebateStatus != null">
				rebate_status,
			</if>
			<if test="errorMsg != null">
				error_msg,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="orderId != null">
				#{orderId,jdbcType=BIGINT},
			</if>
			<if test="rebateCode != null">
				#{rebateCode,jdbcType=VARCHAR},
			</if>
			<if test="rebateType != null">
				#{rebateType,jdbcType=VARCHAR},
			</if>
			<if test="rebateStatus != null">
				#{rebateStatus,jdbcType=BIT},
			</if>
			<if test="errorMsg != null">
				#{errorMsg,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.sinco.carnation.user.model.RebateLogExample"
		resultType="java.lang.Integer">
		select count(*) from user_rebate_log
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user_rebate_log
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.orderId != null">
				order_id = #{record.orderId,jdbcType=BIGINT},
			</if>
			<if test="record.rebateCode != null">
				rebate_code = #{record.rebateCode,jdbcType=VARCHAR},
			</if>
			<if test="record.rebateType != null">
				rebate_type = #{record.rebateType,jdbcType=VARCHAR},
			</if>
			<if test="record.rebateStatus != null">
				rebate_status = #{record.rebateStatus,jdbcType=BIT},
			</if>
			<if test="record.errorMsg != null">
				error_msg = #{record.errorMsg,jdbcType=VARCHAR},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user_rebate_log
		set id = #{record.id,jdbcType=BIGINT},
		order_id = #{record.orderId,jdbcType=BIGINT},
		rebate_code = #{record.rebateCode,jdbcType=VARCHAR},
		rebate_type = #{record.rebateType,jdbcType=VARCHAR},
		rebate_status = #{record.rebateStatus,jdbcType=BIT},
		error_msg = #{record.errorMsg,jdbcType=VARCHAR},
		create_time = #{record.createTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.sinco.carnation.user.model.RebateLog">
		update user_rebate_log
		<set>
			<if test="orderId != null">
				order_id = #{orderId,jdbcType=BIGINT},
			</if>
			<if test="rebateCode != null">
				rebate_code = #{rebateCode,jdbcType=VARCHAR},
			</if>
			<if test="rebateType != null">
				rebate_type = #{rebateType,jdbcType=VARCHAR},
			</if>
			<if test="rebateStatus != null">
				rebate_status = #{rebateStatus,jdbcType=BIT},
			</if>
			<if test="errorMsg != null">
				error_msg = #{errorMsg,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sinco.carnation.user.model.RebateLog">
		update user_rebate_log
		set order_id = #{orderId,jdbcType=BIGINT},
		rebate_code = #{rebateCode,jdbcType=VARCHAR},
		rebate_type = #{rebateType,jdbcType=VARCHAR},
		rebate_status = #{rebateStatus,jdbcType=BIT},
		error_msg = #{errorMsg,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>