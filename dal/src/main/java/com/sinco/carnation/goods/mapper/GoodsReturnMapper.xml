<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinco.carnation.goods.mapper.GoodsReturnMapper">
	<resultMap id="BaseResultMap" type="com.sinco.carnation.goods.model.GoodsReturn">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="add_Time" property="addTime" jdbcType="TIMESTAMP" />
		<result column="delete_Status" property="deleteStatus"
			jdbcType="INTEGER" />
		<result column="return_id" property="returnId" jdbcType="VARCHAR" />
		<result column="of_id" property="ofId" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.sinco.carnation.goods.model.GoodsReturn"
		extends="BaseResultMap">
		<result column="return_info" property="returnInfo" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, add_Time, delete_Status, return_id, of_id, user_id
	</sql>
	<sql id="Blob_Column_List">
		return_info
	</sql>
	<select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
		parameterType="com.sinco.carnation.goods.model.GoodsReturnExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from shop_goods_return
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.sinco.carnation.goods.model.GoodsReturnExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from shop_goods_return
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from shop_goods_return
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from shop_goods_return
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.sinco.carnation.goods.model.GoodsReturnExample">
		delete from shop_goods_return
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.sinco.carnation.goods.model.GoodsReturn">
		insert into shop_goods_return (id, add_Time, delete_Status,
		return_id, of_id, user_id,
		return_info)
		values (#{id,jdbcType=BIGINT}, #{addTime,jdbcType=TIMESTAMP},
		#{deleteStatus,jdbcType=INTEGER},
		#{returnId,jdbcType=VARCHAR}, #{ofId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
		#{returnInfo,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.sinco.carnation.goods.model.GoodsReturn">
		insert into shop_goods_return
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="addTime != null">
				add_Time,
			</if>
			<if test="deleteStatus != null">
				delete_Status,
			</if>
			<if test="returnId != null">
				return_id,
			</if>
			<if test="ofId != null">
				of_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="returnInfo != null">
				return_info,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deleteStatus != null">
				#{deleteStatus,jdbcType=INTEGER},
			</if>
			<if test="returnId != null">
				#{returnId,jdbcType=VARCHAR},
			</if>
			<if test="ofId != null">
				#{ofId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="returnInfo != null">
				#{returnInfo,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.sinco.carnation.goods.model.GoodsReturnExample"
		resultType="java.lang.Integer">
		select count(*) from shop_goods_return
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update shop_goods_return
		<trim prefix="set" suffixOverrides=",">
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.addTime != null">
				add_Time = #{record.addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.deleteStatus != null">
				delete_Status = #{record.deleteStatus,jdbcType=INTEGER},
			</if>
			<if test="record.returnId != null">
				return_id = #{record.returnId,jdbcType=VARCHAR},
			</if>
			<if test="record.ofId != null">
				of_id = #{record.ofId,jdbcType=BIGINT},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=BIGINT},
			</if>
			<if test="record.returnInfo != null">
				return_info = #{record.returnInfo,jdbcType=LONGVARCHAR},
			</if>
		</trim>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update shop_goods_return
		set id = #{record.id,jdbcType=BIGINT},
		add_Time = #{record.addTime,jdbcType=TIMESTAMP},
		delete_Status = #{record.deleteStatus,jdbcType=INTEGER},
		return_id = #{record.returnId,jdbcType=VARCHAR},
		of_id = #{record.ofId,jdbcType=BIGINT},
		user_id = #{record.userId,jdbcType=BIGINT},
		return_info = #{record.returnInfo,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update shop_goods_return
		set id = #{record.id,jdbcType=BIGINT},
		add_Time = #{record.addTime,jdbcType=TIMESTAMP},
		delete_Status = #{record.deleteStatus,jdbcType=INTEGER},
		return_id = #{record.returnId,jdbcType=VARCHAR},
		of_id = #{record.ofId,jdbcType=BIGINT},
		user_id = #{record.userId,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.sinco.carnation.goods.model.GoodsReturn">
		update shop_goods_return
		<trim prefix="set" suffixOverrides=",">
			<if test="addTime != null">
				add_Time = #{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deleteStatus != null">
				delete_Status = #{deleteStatus,jdbcType=INTEGER},
			</if>
			<if test="returnId != null">
				return_id = #{returnId,jdbcType=VARCHAR},
			</if>
			<if test="ofId != null">
				of_id = #{ofId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="returnInfo != null">
				return_info = #{returnInfo,jdbcType=LONGVARCHAR},
			</if>
		</trim>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sinco.carnation.goods.model.GoodsReturn">
		update shop_goods_return
		set add_Time = #{addTime,jdbcType=TIMESTAMP},
		delete_Status = #{deleteStatus,jdbcType=INTEGER},
		return_id = #{returnId,jdbcType=VARCHAR},
		of_id = #{ofId,jdbcType=BIGINT},
		user_id = #{userId,jdbcType=BIGINT},
		return_info = #{returnInfo,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sinco.carnation.goods.model.GoodsReturn">
		update shop_goods_return
		set add_Time = #{addTime,jdbcType=TIMESTAMP},
		delete_Status = #{deleteStatus,jdbcType=INTEGER},
		return_id = #{returnId,jdbcType=VARCHAR},
		of_id = #{ofId,jdbcType=BIGINT},
		user_id = #{userId,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>