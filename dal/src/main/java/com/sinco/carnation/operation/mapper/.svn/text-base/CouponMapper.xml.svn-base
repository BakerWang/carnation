<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinco.carnation.operation.mapper.CouponMapper">
	<resultMap id="BaseResultMap" type="com.sinco.carnation.operation.model.Coupon">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
		<result column="delete_status" property="deleteStatus"
			jdbcType="BIT" />
		<result column="coupon_amount" property="couponAmount"
			jdbcType="DECIMAL" />
		<result column="coupon_begin_time" property="couponBeginTime"
			jdbcType="DATE" />
		<result column="coupon_count" property="couponCount" jdbcType="INTEGER" />
		<result column="coupon_end_time" property="couponEndTime"
			jdbcType="DATE" />
		<result column="coupon_name" property="couponName" jdbcType="VARCHAR" />
		<result column="coupon_order_amount" property="couponOrderAmount"
			jdbcType="DECIMAL" />
		<result column="coupon_type" property="couponType" jdbcType="INTEGER" />
		<result column="coupon_acc" property="couponAcc" jdbcType="VARCHAR" />
		<result column="store_id" property="storeId" jdbcType="BIGINT" />
		<result column="new_year_id" property="newYearId" jdbcType="BIGINT" />
	</resultMap>
	<resultMap id="BOResultMap" type="com.sinco.carnation.operation.bo.CouponBO"
		extends="BaseResultMap">
		<result column="store_name" property="storeName" jdbcType="VARCHAR" />
		<result column="coupon_status" property="couponStatus"
			jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="CouponResultMap" type="com.sinco.carnation.operation.bo.CouponBO"
		extends="BaseResultMap">
		<result column="coupon_info_Count" property="couponInfoCount"
			jdbcType="INTEGER" />
		<result column="store_name" property="storeName" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, add_time, delete_status, coupon_amount, coupon_begin_time,
		coupon_count, coupon_end_time,
		coupon_name, coupon_order_amount, coupon_type, coupon_acc, store_id,new_year_id
	</sql>

	<sql id="Base_CouponPageList">
		sc.id, sc.add_time, sc.delete_status, sc.coupon_amount,
		sc.coupon_begin_time, sc.coupon_count, sc.coupon_end_time,
		sc.coupon_name, sc.coupon_order_amount, sc.coupon_type, sc.coupon_acc,
		sc.store_id,sc.new_year_id
	</sql>

	<select id="queryCouponById" resultMap="CouponResultMap">
		SELECT COUNT(sci.coupon_id) coupon_info_Count,sc.* FROM shop_coupon sc LEFT
		JOIN shop_coupon_info sci ON sc.id = sci.coupon_id
		WHERE sc.delete_status=0 and sc.id=#{couponId,jdbcType=BIGINT}
		GROUP BY sc.id
	</select>

	<select id="queryNewYearById" resultMap="CouponResultMap">
		select
		<include refid="Base_Column_List" />
		from shop_coupon
		where new_year_id = #{newYearId,jdbcType=BIGINT}
	</select>

	<select id="queryCouponPageList" resultMap="CouponResultMap">
		select
		<include refid="Base_CouponPageList" />
		,COUNT(sci.coupon_id) coupon_info_Count,ss.store_name
		FROM shop_coupon sc LEFT JOIN shop_coupon_info sci ON sc.id =
		sci.coupon_id
		LEFT JOIN shop_store ss on ss.id=sc.store_id
		where sc.delete_status=0
		<if test="couponName != null and couponName != ''">
			and sc.coupon_name like concat('%',#{couponName,jdbcType=VARCHAR},'%')
		</if>
		<if test="storeId != null">
			and sc.store_id like concat('%',#{storeId,jdbcType=BIGINT},'%')
		</if>
		<if test="beginTime != null and beginTime != ''">
			and DATE_FORMAT(sc.coupon_begin_time,'%Y-%m-%d') <![CDATA[ <= ]]>
			DATE_FORMAT(#{beginTime},'%Y-%m-%d')
		</if>
		<if test="endTime != null and endTime != ''">
			and DATE_FORMAT(sc.coupon_end_time,'%Y-%m-%d') <![CDATA[ >= ]]>
			DATE_FORMAT(#{endTime},'%Y-%m-%d')
		</if>
		GROUP BY sc.id order by sc.add_time desc
	</select>

	<select id="selectByExample" parameterType="com.sinco.carnation.operation.model.CouponExample"
		resultMap="BOResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from shop_coupon
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BOResultMap">
		select
		<include refid="Base_Column_List" />
		from shop_coupon
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from shop_coupon
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.sinco.carnation.operation.model.CouponExample">
		delete from shop_coupon
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.sinco.carnation.operation.model.Coupon"
		useGeneratedKeys="true" keyProperty="id">
		insert into shop_coupon (id, add_time, delete_status,
		coupon_amount, coupon_begin_time, coupon_count,
		coupon_end_time, coupon_name, coupon_order_amount,
		coupon_type, coupon_acc, store_id,new_year_id
		)
		values (#{id,jdbcType=BIGINT}, #{addTime,jdbcType=TIMESTAMP},
		#{deleteStatus,jdbcType=BIT},
		#{couponAmount,jdbcType=DECIMAL}, #{couponBeginTime,jdbcType=DATE}, #{couponCount,jdbcType=INTEGER},
		#{couponEndTime,jdbcType=DATE}, #{couponName,jdbcType=VARCHAR},
		#{couponOrderAmount,jdbcType=DECIMAL},
		#{couponType,jdbcType=INTEGER}, #{couponAcc,jdbcType=VARCHAR}, #{storeId,jdbcType=BIGINT},
		#{newYearId,jdbcType=BIGINT}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.sinco.carnation.operation.model.Coupon"
		useGeneratedKeys="true" keyProperty="id">
		insert into shop_coupon
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
			<if test="deleteStatus != null">
				delete_status,
			</if>
			<if test="couponAmount != null">
				coupon_amount,
			</if>
			<if test="couponBeginTime != null">
				coupon_begin_time,
			</if>
			<if test="couponCount != null">
				coupon_count,
			</if>
			<if test="couponEndTime != null">
				coupon_end_time,
			</if>
			<if test="couponName != null">
				coupon_name,
			</if>
			<if test="couponOrderAmount != null">
				coupon_order_amount,
			</if>
			<if test="couponType != null">
				coupon_type,
			</if>
			<if test="couponAcc != null">
				coupon_acc,
			</if>
			<if test="storeId != null">
				store_id,
			</if>
			<if test="newYearId != null">
				new_year_id
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deleteStatus != null">
				#{deleteStatus,jdbcType=BIT},
			</if>
			<if test="couponAmount != null">
				#{couponAmount,jdbcType=DECIMAL},
			</if>
			<if test="couponBeginTime != null">
				#{couponBeginTime,jdbcType=DATE},
			</if>
			<if test="couponCount != null">
				#{couponCount,jdbcType=INTEGER},
			</if>
			<if test="couponEndTime != null">
				#{couponEndTime,jdbcType=DATE},
			</if>
			<if test="couponName != null">
				#{couponName,jdbcType=VARCHAR},
			</if>
			<if test="couponOrderAmount != null">
				#{couponOrderAmount,jdbcType=DECIMAL},
			</if>
			<if test="couponType != null">
				#{couponType,jdbcType=INTEGER},
			</if>
			<if test="couponAcc != null">
				#{couponAcc,jdbcType=VARCHAR},
			</if>
			<if test="storeId != null">
				#{storeId,jdbcType=BIGINT},
			</if>
			<if test="newYearId != null">
				#{newYearId,jdbcType=BIGINT}
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.sinco.carnation.operation.model.CouponExample"
		resultType="java.lang.Integer">
		select count(*) from shop_coupon
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update shop_coupon
		<trim prefix="set" suffixOverrides=",">
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.addTime != null">
				add_time = #{record.addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.deleteStatus != null">
				delete_status = #{record.deleteStatus,jdbcType=BIT},
			</if>
			<if test="record.couponAmount != null">
				coupon_amount = #{record.couponAmount,jdbcType=DECIMAL},
			</if>
			<if test="record.couponBeginTime != null">
				coupon_begin_time = #{record.couponBeginTime,jdbcType=DATE},
			</if>
			<if test="record.couponCount != null">
				coupon_count = #{record.couponCount,jdbcType=INTEGER},
			</if>
			<if test="record.couponEndTime != null">
				coupon_end_time = #{record.couponEndTime,jdbcType=DATE},
			</if>
			<if test="record.couponName != null">
				coupon_name = #{record.couponName,jdbcType=VARCHAR},
			</if>
			<if test="record.couponOrderAmount != null">
				coupon_order_amount = #{record.couponOrderAmount,jdbcType=DECIMAL},
			</if>
			<if test="record.couponType != null">
				coupon_type = #{record.couponType,jdbcType=INTEGER},
			</if>
			<if test="record.couponAcc != null">
				coupon_acc = #{record.couponAcc,jdbcType=VARCHAR},
			</if>
			<if test="record.storeId != null">
				store_id = #{record.storeId,jdbcType=BIGINT},
			</if>
			<if test="record.storeId != null">
				new_year_id = #{record.newYearId,jdbcType=BIGINT}
			</if>

		</trim>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update shop_coupon
		set id = #{record.id,jdbcType=BIGINT},
		add_time = #{record.addTime,jdbcType=TIMESTAMP},
		delete_status = #{record.deleteStatus,jdbcType=BIT},
		coupon_amount = #{record.couponAmount,jdbcType=DECIMAL},
		coupon_begin_time = #{record.couponBeginTime,jdbcType=DATE},
		coupon_count = #{record.couponCount,jdbcType=INTEGER},
		coupon_end_time = #{record.couponEndTime,jdbcType=DATE},
		coupon_name = #{record.couponName,jdbcType=VARCHAR},
		coupon_order_amount = #{record.couponOrderAmount,jdbcType=DECIMAL},
		coupon_type = #{record.couponType,jdbcType=INTEGER},
		coupon_acc = #{record.couponAcc,jdbcType=VARCHAR},
		store_id = #{record.storeId,jdbcType=BIGINT},
		new_year_id = #{record.newYearId,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.sinco.carnation.operation.model.Coupon">
		update shop_coupon
		<trim prefix="set" suffixOverrides=",">
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deleteStatus != null">
				delete_status = #{deleteStatus,jdbcType=BIT},
			</if>
			<if test="couponAmount != null">
				coupon_amount = #{couponAmount,jdbcType=DECIMAL},
			</if>
			<if test="couponBeginTime != null">
				coupon_begin_time = #{couponBeginTime,jdbcType=DATE},
			</if>
			<if test="couponCount != null">
				coupon_count = #{couponCount,jdbcType=INTEGER},
			</if>
			<if test="couponEndTime != null">
				coupon_end_time = #{couponEndTime,jdbcType=DATE},
			</if>
			<if test="couponName != null">
				coupon_name = #{couponName,jdbcType=VARCHAR},
			</if>
			<if test="couponOrderAmount != null">
				coupon_order_amount = #{couponOrderAmount,jdbcType=DECIMAL},
			</if>
			<if test="couponType != null">
				coupon_type = #{couponType,jdbcType=INTEGER},
			</if>
			<if test="couponAcc != null">
				coupon_acc = #{couponAcc,jdbcType=VARCHAR},
			</if>
			<if test="storeId != null">
				store_id = #{storeId,jdbcType=BIGINT},
			</if>
			<if test="newYearId != null">
				new_year_id = #{newYearId,jdbcType=BIGINT}
			</if>
		</trim>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sinco.carnation.operation.model.Coupon">
		update shop_coupon
		set add_time = #{addTime,jdbcType=TIMESTAMP},
		delete_status = #{deleteStatus,jdbcType=BIT},
		coupon_amount = #{couponAmount,jdbcType=DECIMAL},
		coupon_begin_time = #{couponBeginTime,jdbcType=DATE},
		coupon_count = #{couponCount,jdbcType=INTEGER},
		coupon_end_time = #{couponEndTime,jdbcType=DATE},
		coupon_name = #{couponName,jdbcType=VARCHAR},
		coupon_order_amount = #{couponOrderAmount,jdbcType=DECIMAL},
		coupon_type = #{couponType,jdbcType=INTEGER},
		coupon_acc = #{couponAcc,jdbcType=VARCHAR},
		store_id = #{storeId,jdbcType=BIGINT},
		new_year_id = #{record.newYearId,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="getByName" resultMap="BOResultMap">
		SELECT * FROM shop_coupon WHERE coupon_name=#{couponName}
	</select>
	<select id="getByCouponInfoId" resultMap="BOResultMap">
	SELECT sc.* FROM shop_coupon sc LEFT JOIN shop_coupon_info sci 
    ON sc.id = sci.coupon_id WHERE sci.id = #{infoId} 
	</select>
	
</mapper>