<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinco.carnation.sns.mapper.InformationReplyMapper">
	<resultMap id="BaseResultMap"
		type="com.sinco.carnation.sns.model.InformationReply">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="add_Time" property="addTime" jdbcType="TIMESTAMP" />
		<result column="delete_Status" property="deleteStatus"
			jdbcType="INTEGER" />
		<result column="info_id" property="infoId" jdbcType="BIGINT" />
		<result column="user_Id" property="userId" jdbcType="BIGINT" />
		<result column="user_Name" property="userName" jdbcType="VARCHAR" />
		<result column="user_Photo" property="userPhoto" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs"
		type="com.sinco.carnation.sns.model.InformationReply" extends="BaseResultMap">
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, add_Time, delete_Status, info_id, user_Id, user_Name, user_Photo
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
		parameterType="com.sinco.carnation.sns.model.InformationReplyExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from sns_information_reply
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.sinco.carnation.sns.model.InformationReplyExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from sns_information_reply
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from sns_information_reply
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from sns_information_reply
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.sinco.carnation.sns.model.InformationReplyExample">
		delete from sns_information_reply
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.sinco.carnation.sns.model.InformationReply">
		insert into sns_information_reply (id, add_Time, delete_Status,
		info_id, user_Id, user_Name,
		user_Photo, content)
		values (#{id,jdbcType=BIGINT}, #{addTime,jdbcType=TIMESTAMP},
		#{deleteStatus,jdbcType=INTEGER},
		#{infoId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR},
		#{userPhoto,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.sinco.carnation.sns.model.InformationReply">
		insert into sns_information_reply
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="addTime != null">
				add_Time,
			</if>
			<if test="deleteStatus != null">
				delete_Status,
			</if>
			<if test="infoId != null">
				info_id,
			</if>
			<if test="userId != null">
				user_Id,
			</if>
			<if test="userName != null">
				user_Name,
			</if>
			<if test="userPhoto != null">
				user_Photo,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deleteStatus != null">
				#{deleteStatus,jdbcType=INTEGER},
			</if>
			<if test="infoId != null">
				#{infoId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPhoto != null">
				#{userPhoto,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.sinco.carnation.sns.model.InformationReplyExample"
		resultType="java.lang.Integer">
		select count(*) from sns_information_reply
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update sns_information_reply
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.addTime != null">
				add_Time = #{record.addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.deleteStatus != null">
				delete_Status = #{record.deleteStatus,jdbcType=INTEGER},
			</if>
			<if test="record.infoId != null">
				info_id = #{record.infoId,jdbcType=BIGINT},
			</if>
			<if test="record.userId != null">
				user_Id = #{record.userId,jdbcType=BIGINT},
			</if>
			<if test="record.userName != null">
				user_Name = #{record.userName,jdbcType=VARCHAR},
			</if>
			<if test="record.userPhoto != null">
				user_Photo = #{record.userPhoto,jdbcType=VARCHAR},
			</if>
			<if test="record.content != null">
				content = #{record.content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update sns_information_reply
		set id = #{record.id,jdbcType=BIGINT},
		add_Time = #{record.addTime,jdbcType=TIMESTAMP},
		delete_Status = #{record.deleteStatus,jdbcType=INTEGER},
		info_id = #{record.infoId,jdbcType=BIGINT},
		user_Id = #{record.userId,jdbcType=BIGINT},
		user_Name = #{record.userName,jdbcType=VARCHAR},
		user_Photo = #{record.userPhoto,jdbcType=VARCHAR},
		content = #{record.content,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update sns_information_reply
		set id = #{record.id,jdbcType=BIGINT},
		add_Time = #{record.addTime,jdbcType=TIMESTAMP},
		delete_Status = #{record.deleteStatus,jdbcType=INTEGER},
		info_id = #{record.infoId,jdbcType=BIGINT},
		user_Id = #{record.userId,jdbcType=BIGINT},
		user_Name = #{record.userName,jdbcType=VARCHAR},
		user_Photo = #{record.userPhoto,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.sinco.carnation.sns.model.InformationReply">
		update sns_information_reply
		<set>
			<if test="addTime != null">
				add_Time = #{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deleteStatus != null">
				delete_Status = #{deleteStatus,jdbcType=INTEGER},
			</if>
			<if test="infoId != null">
				info_id = #{infoId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				user_Id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="userName != null">
				user_Name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPhoto != null">
				user_Photo = #{userPhoto,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sinco.carnation.sns.model.InformationReply">
		update sns_information_reply
		set add_Time = #{addTime,jdbcType=TIMESTAMP},
		delete_Status = #{deleteStatus,jdbcType=INTEGER},
		info_id = #{infoId,jdbcType=BIGINT},
		user_Id = #{userId,jdbcType=BIGINT},
		user_Name = #{userName,jdbcType=VARCHAR},
		user_Photo = #{userPhoto,jdbcType=VARCHAR},
		content = #{content,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sinco.carnation.sns.model.InformationReply">
		update sns_information_reply
		set add_Time = #{addTime,jdbcType=TIMESTAMP},
		delete_Status = #{deleteStatus,jdbcType=INTEGER},
		info_id = #{infoId,jdbcType=BIGINT},
		user_Id = #{userId,jdbcType=BIGINT},
		user_Name = #{userName,jdbcType=VARCHAR},
		user_Photo = #{userPhoto,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>