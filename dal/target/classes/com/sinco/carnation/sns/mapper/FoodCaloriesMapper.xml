<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinco.carnation.sns.mapper.FoodCaloriesMapper">
	<resultMap id="BaseResultMap" type="com.sinco.carnation.sns.model.FoodCalories">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="calories" property="calories" jdbcType="INTEGER" />
		<result column="class_id" property="classId" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="BOResultMap" type="com.sinco.carnation.sns.bo.FoodCaloriesBO"
		extends="BaseResultMap">
		<result column="className" property="className" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, `name`, calories, class_id
	</sql>

	<select id="queryFoodCaloriesById" resultMap="BOResultMap">
		SELECT
		<include refid="Base_Column_List"></include>
		FROM food_calories WHERE class_id=#{classId}
	</select>

	<select id="selectByExample" parameterType="com.sinco.carnation.sns.model.FoodCaloriesExample"
		resultMap="BOResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from food_calories
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BOResultMap">
		select
		<include refid="Base_Column_List" />
		from food_calories
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="findPageByVO" resultMap="BOResultMap">
		select
		f.id, f.name, f.calories, f.class_id, fc.name as className
		from food_calories f
		left join food_class fc on f.class_id = fc.id
		<where>
			<if test="vo.foodClassId!=null and vo.foodClassId>0">
				f.class_id = #{vo.foodClassId}
			</if>
		</where>
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from food_calories
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByIdList">
		delete from food_calories
		where id in
		<foreach collection="ids" item="listItem" open="(" close=")"
			separator=",">
			#{listItem}
		</foreach>
	</delete>
	<delete id="deleteByExample" parameterType="com.sinco.carnation.sns.model.FoodCaloriesExample">
		delete from food_calories
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.sinco.carnation.sns.model.FoodCalories"
		useGeneratedKeys="true" keyProperty="id">
		insert into food_calories (id, name, calories,
		class_id)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{calories,jdbcType=INTEGER},
		#{classId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.sinco.carnation.sns.model.FoodCalories"
		useGeneratedKeys="true" keyProperty="id">
		insert into food_calories
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="calories != null">
				calories,
			</if>
			<if test="classId != null">
				class_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="calories != null">
				#{calories,jdbcType=INTEGER},
			</if>
			<if test="classId != null">
				#{classId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.sinco.carnation.sns.model.FoodCaloriesExample"
		resultType="java.lang.Integer">
		select count(*) from food_calories
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update food_calories
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.calories != null">
				calories = #{record.calories,jdbcType=INTEGER},
			</if>
			<if test="record.classId != null">
				class_id = #{record.classId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update food_calories
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		calories = #{record.calories,jdbcType=INTEGER},
		class_id = #{record.classId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.sinco.carnation.sns.model.FoodCalories">
		update food_calories
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="calories != null">
				calories = #{calories,jdbcType=INTEGER},
			</if>
			<if test="classId != null">
				class_id = #{classId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sinco.carnation.sns.model.FoodCalories">
		update food_calories
		set name = #{name,jdbcType=VARCHAR},
		calories = #{calories,jdbcType=INTEGER},
		class_id = #{classId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>