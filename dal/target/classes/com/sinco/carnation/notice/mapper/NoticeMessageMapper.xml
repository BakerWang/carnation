<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinco.carnation.notice.mapper.NoticeMessageMapper">
	<resultMap id="BaseResultMap"
		type="com.sinco.carnation.notice.model.NoticeMessage">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="uid" property="uid" jdbcType="BIGINT" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="notice_message" property="noticeMessage"
			jdbcType="VARCHAR" />
		<result column="notice_type" property="noticeType" jdbcType="INTEGER" />
		<result column="push_status" property="pushStatus" jdbcType="INTEGER" />
		<result column="notcie_log_amount" property="notcieLogAmount"
			jdbcType="DECIMAL" />
		<result column="relate_id" property="relateId" jdbcType="BIGINT" />
		<result column="pushToAll" property="pushtoall" jdbcType="INTEGER" />
		<result column="message_status" property="messageStatus"
			jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="BOResultMap" type="com.sinco.carnation.notice.bo.NoticeMessageBO"
		extends="BaseResultMap" />
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, uid, create_time, notice_message, notice_type,
		push_status,
		notcie_log_amount,
		relate_id, pushToAll,message_status
	</sql>
	<select id="selectByExample"
		parameterType="com.sinco.carnation.notice.model.NoticeMessageExample"
		resultMap="BOResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from notice_message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BOResultMap">
		select
		<include refid="Base_Column_List" />
		from notice_message
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		notice_message
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.sinco.carnation.notice.model.NoticeMessageExample">
		delete from notice_message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.sinco.carnation.notice.model.NoticeMessage"
		useGeneratedKeys="true" keyProperty="id">
		insert into notice_message (id,
		uid, create_time,
		notice_message, notice_type, push_status,
		notcie_log_amount, relate_id, pushToAll,message_status
		)
		values
		(#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT},
		#{createTime,jdbcType=TIMESTAMP},
		#{noticeMessage,jdbcType=VARCHAR},
		#{noticeType,jdbcType=INTEGER}, #{pushStatus,jdbcType=INTEGER},
		#{notcieLogAmount,jdbcType=DECIMAL}, #{relateId,jdbcType=BIGINT},
		#{pushtoall,jdbcType=INTEGER},#{messageStatus,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.sinco.carnation.notice.model.NoticeMessage"
		useGeneratedKeys="true" keyProperty="id">
		insert into notice_message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="noticeMessage != null">
				notice_message,
			</if>
			<if test="noticeType != null">
				notice_type,
			</if>
			<if test="pushStatus != null">
				push_status,
			</if>
			<if test="notcieLogAmount != null">
				notcie_log_amount,
			</if>
			<if test="relateId != null">
				relate_id,
			</if>
			<if test="pushtoall != null">
				pushToAll,
			</if>
			<if test="messageStatus != null">
				message_status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="noticeMessage != null">
				#{noticeMessage,jdbcType=VARCHAR},
			</if>
			<if test="noticeType != null">
				#{noticeType,jdbcType=INTEGER},
			</if>
			<if test="pushStatus != null">
				#{pushStatus,jdbcType=INTEGER},
			</if>
			<if test="notcieLogAmount != null">
				#{notcieLogAmount,jdbcType=DECIMAL},
			</if>
			<if test="relateId != null">
				#{relateId,jdbcType=BIGINT},
			</if>
			<if test="pushtoall != null">
				#{pushtoall,jdbcType=INTEGER},
			</if>
			<if test="messageStatus != null">
				#{messageStatus,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.sinco.carnation.notice.model.NoticeMessageExample"
		resultType="java.lang.Integer">
		select count(*) from notice_message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update notice_message
		<trim prefix="set" suffixOverrides=",">
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.uid != null">
				uid = #{record.uid,jdbcType=BIGINT},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.noticeMessage != null">
				notice_message =
				#{record.noticeMessage,jdbcType=VARCHAR},
			</if>
			<if test="record.noticeType != null">
				notice_type = #{record.noticeType,jdbcType=INTEGER},
			</if>
			<if test="record.pushStatus != null">
				push_status = #{record.pushStatus,jdbcType=INTEGER},
			</if>
			<if test="record.notcieLogAmount != null">
				notcie_log_amount =
				#{record.notcieLogAmount,jdbcType=DECIMAL},
			</if>
			<if test="record.relateId != null">
				relate_id = #{record.relateId,jdbcType=BIGINT},
			</if>
			<if test="record.pushtoall != null">
				pushToAll = #{record.pushtoall,jdbcType=INTEGER},
			</if>
			<if test="record.messageStatus != null">
				message_status =
				#{record.messageStatus,jdbcType=INTEGER},
			</if>
		</trim>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update notice_message
		set id = #{record.id,jdbcType=BIGINT},
		uid =
		#{record.uid,jdbcType=BIGINT},
		create_time =
		#{record.createTime,jdbcType=TIMESTAMP},
		notice_message =
		#{record.noticeMessage,jdbcType=VARCHAR},
		notice_type =
		#{record.noticeType,jdbcType=INTEGER},
		push_status =
		#{record.pushStatus,jdbcType=INTEGER},
		notcie_log_amount =
		#{record.notcieLogAmount,jdbcType=DECIMAL},
		relate_id =
		#{record.relateId,jdbcType=BIGINT},
		pushToAll =
		#{record.pushtoall,jdbcType=INTEGER},
		message_status =
		#{record.messageStatus,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.sinco.carnation.notice.model.NoticeMessage">
		update notice_message
		<trim prefix="set" suffixOverrides=",">
			<if test="uid != null">
				uid = #{uid,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="noticeMessage != null">
				notice_message = #{noticeMessage,jdbcType=VARCHAR},
			</if>
			<if test="noticeType != null">
				notice_type = #{noticeType,jdbcType=INTEGER},
			</if>
			<if test="pushStatus != null">
				push_status = #{pushStatus,jdbcType=INTEGER},
			</if>
			<if test="notcieLogAmount != null">
				notcie_log_amount = #{notcieLogAmount,jdbcType=DECIMAL},
			</if>
			<if test="relateId != null">
				relate_id = #{relateId,jdbcType=BIGINT},
			</if>
			<if test="pushtoall != null">
				pushToAll = #{pushtoall,jdbcType=INTEGER},
			</if>
			<if test="messageStatus != null">
				message_status = #{messageStatus,jdbcType=INTEGER},
			</if>
		</trim>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sinco.carnation.notice.model.NoticeMessage">
		update
		notice_message
		set uid = #{uid,jdbcType=BIGINT},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		notice_message =
		#{noticeMessage,jdbcType=VARCHAR},
		notice_type =
		#{noticeType,jdbcType=INTEGER},
		push_status =
		#{pushStatus,jdbcType=INTEGER},
		notcie_log_amount =
		#{notcieLogAmount,jdbcType=DECIMAL},
		relate_id =
		#{relateId,jdbcType=BIGINT},
		pushToAll = #{pushtoall,jdbcType=INTEGER},
		message_status = #{messageStatus,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=BIGINT}
	</update>
	<update id="cleanUnreadMessage">
		update notice_message
		set message_status = 1
		where uid
		= #{uid,jdbcType=BIGINT}
		and notice_type =
		#{noticeType,jdbcType=INTEGER}
		and message_status = 0
	</update>
	<select id="queryUnreadMessageCount" resultType="java.lang.Integer">
		select count(0)
		from notice_message
		where uid = #{uid,jdbcType=BIGINT}
		and notice_type =
		#{noticeType,jdbcType=INTEGER}
		and message_status = 0
	</select>
</mapper>