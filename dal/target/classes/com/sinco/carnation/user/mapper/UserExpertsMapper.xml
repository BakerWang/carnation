<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinco.carnation.user.mapper.UserExpertsMapper">
	<resultMap id="BaseResultMap" type="com.sinco.carnation.user.model.UserExperts">
		<id column="uid" property="uid" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="head_img_path" property="headImgPath" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="praise_count" property="praiseCount" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="create_by" property="createBy" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_by" property="updateBy" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="is_deleted" property="isDeleted" jdbcType="BIT" />
		<result column="expert_type" property="expertType" jdbcType="INTEGER" />
		<result column="expert_Index" property="expertIndex" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.sinco.carnation.user.model.UserExperts"
		extends="BaseResultMap">
		<result column="praise_Info" property="praiseInfo" jdbcType="LONGVARCHAR" />
		<result column="favor_Info" property="favorInfo" jdbcType="LONGVARCHAR" />
		<result column="favor_count" property="favorCount" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ExtendResultMap" type="com.sinco.carnation.user.bo.UserExpertsBO"
		extends="ResultMapWithBLOBs">
	</resultMap>

	<resultMap id="ResultExpertsList" type="com.sinco.carnation.user.bo.UserExpertsBO"
		extends="BaseResultMap">
		<result column="login_name" property="loginName" jdbcType="VARCHAR" />
	</resultMap>

	<delete id="delectExpertByIds">
		delete from user_experts
		where uid in
		<foreach collection="uid" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<select id="selectById" resultMap="ExtendResultMap">
		select
		<include refid="Result_Experts_List" />
		from user_experts e INNER JOIN sys_user_account s ON (s.uid=e.uid and
		s.account_type=2) where e.uid=#{uid} order by e.create_time desc
	</select>

	<update id="updateExpertsUnFavo">
		UPDATE user_experts
		SET favor_count = favor_count - 1,
		favor_Info = #{favorInfo,jdbcType=VARCHAR}
		WHERE
		uid = #{uid,jdbcType=BIGINT}
	</update>

	<update id="updateExpertsFavo">
		UPDATE user_experts
		SET favor_count = favor_count + 1,
		favor_Info = CONCAT(favor_Info, #{favorInfo,jdbcType=VARCHAR}, ',')
		WHERE
		uid = #{uid,jdbcType=BIGINT}
	</update>

	<update id="updateExpertsPraises">
		UPDATE user_experts
		SET praise_count = praise_count + 1,
		praise_Info = CONCAT(praise_Info, #{praiseInfo,jdbcType=VARCHAR}, ',')
		WHERE
		uid = #{uid,jdbcType=BIGINT}
	</update>
	<update id="updateExpertsUnPraises">
		UPDATE user_experts
		SET praise_count = praise_count - 1,
		praise_Info = #{praiseInfo,jdbcType=VARCHAR}
		WHERE
		uid = #{uid,jdbcType=BIGINT}
	</update>

	<select id="selectExpertsDetail" resultMap="ExtendResultMap">
		SELECT
		u.*,
		(SELECT count(0) FROM user_customer_favorites f where f.uid = #{uid})
		favoritesCount
		FROM
		user_experts u
		WHERE
		u.is_deleted = 0
		AND u.uid = #{uid}
	</select>

	<select id="queryExperts" resultMap="ExtendResultMap">
		SELECT e.* from user_customer_favorites f, user_experts e WHERE
		f.fid=e.uid AND f.type=#{type,jdbcType=VARCHAR}
		<if test="expertType != null and expertType != ''">
			AND e.expert_type=#{expertType,jdbcType=INTEGER}
		</if>
		AND f.uid=#{uid,jdbcType=INTEGER} ORDER BY f.create_time DESC
	</select>
	<select id="queryExpertsCount" resultMap="BaseResultMap">
		SELECT count(0) from user_customer_favorites f, user_experts e WHERE
		f.fid=e.uid AND f.type=#{type,jdbcType=VARCHAR} AND
		e.expert_type=#{expertType,jdbcType=INTEGER} AND
		f.uid=#{uid,jdbcType=INTEGER} ORDER BY f.create_time DESC
	</select>

	<select id="selectExpertsListByVO" resultMap="ExtendResultMap">
		SELECT * FROM user_experts WHERE expert_type =
		#{vo.experType,jdbcType=INTEGER} AND is_deleted = 0 ORDER BY
		expert_Index
	</select>
	<select id="selectExpertsListCountByVO" resultType="int">
		SELECT count(0) FROM user_experts WHERE expert_type =
		#{vo.experType,jdbcType=INTEGER} AND is_deleted = 0
	</select>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		uid, name, title, sex, description, head_img_path, email, mobile,
		praise_count, status,
		create_by, create_time, update_by, update_time, is_deleted,
		expert_type,favor_Info,favor_count,expert_Index
	</sql>
	<sql id="Result_Experts_List">
		s.login_name,e.uid, e.name, e.title, e.sex, e.description, e.head_img_path, e.email,
		e.mobile,e.praise_Info, e.praise_count, e.status,
		e.create_by, e.create_time, e.update_by, e.update_time, e.is_deleted,
		e.expert_type,e.favor_count,e.favor_Info,e.expert_Index
	</sql>
	<sql id="Blob_Column_List">
		praise_Info
	</sql>
	<select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
		parameterType="com.sinco.carnation.user.model.UserExpertsExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from user_experts
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.sinco.carnation.user.model.UserExpertsExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user_experts
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from user_experts
		where uid = #{uid,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user_experts
		where uid = #{uid,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.sinco.carnation.user.model.UserExpertsExample">
		delete from user_experts
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.sinco.carnation.user.model.UserExperts">
		insert into user_experts (uid, name, title,
		sex, description, head_img_path,
		email, mobile, praise_count,
		status, create_by, create_time,
		update_by, update_time, is_deleted,
		expert_type, praise_Info,favor_Info,favor_count,expert_Index)
		values (#{uid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
		#{title,jdbcType=VARCHAR},
		#{sex,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{headImgPath,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
		#{praiseCount,jdbcType=INTEGER},
		#{status,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
		#{isDeleted,jdbcType=BIT},
		#{expertType,jdbcType=INTEGER}, #{praiseInfo,jdbcType=LONGVARCHAR},#{favorInfo,jdbcType=LONGVARCHAR}
		,#{favorCount,jdbcType=INTEGER},#{expertIndex,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.sinco.carnation.user.model.UserExperts">
		insert into user_experts
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				uid,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="headImgPath != null">
				head_img_path,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="praiseCount != null">
				praise_count,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateBy != null">
				update_by,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="isDeleted != null">
				is_deleted,
			</if>
			<if test="expertType != null">
				expert_type,
			</if>
			<if test="praiseInfo != null">
				praise_Info,
			</if>
			<if test="favorInfo != null">
				favor_Info,
			</if>
			<if test="favorCount != null">
				favor_count,
			</if>
			<if test="expertIndex != null">
				expert_Index,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				#{uid,jdbcType=BIGINT},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=INTEGER},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="headImgPath != null">
				#{headImgPath,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="praiseCount != null">
				#{praiseCount,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="createBy != null">
				#{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				#{updateBy,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=BIT},
			</if>
			<if test="expertType != null">
				#{expertType,jdbcType=INTEGER},
			</if>
			<if test="praiseInfo != null">
				#{praiseInfo,jdbcType=LONGVARCHAR},
			</if>
			<if test="favorCount != null">
				#{favorCount,jdbcType=LONGVARCHAR},
			</if>
			<if test="favorInfo != null">
				#{favorInfo,jdbcType=INTEGER},
			</if>
			<if test="expertIndex != null">
				#{expertIndex,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.sinco.carnation.user.model.UserExpertsExample"
		resultType="java.lang.Integer">
		select count(*) from user_experts
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user_experts
		<set>
			<if test="record.uid != null">
				uid = #{record.uid,jdbcType=BIGINT},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.title != null">
				title = #{record.title,jdbcType=VARCHAR},
			</if>
			<if test="record.sex != null">
				sex = #{record.sex,jdbcType=INTEGER},
			</if>
			<if test="record.description != null">
				description = #{record.description,jdbcType=VARCHAR},
			</if>
			<if test="record.headImgPath != null">
				head_img_path = #{record.headImgPath,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.mobile != null">
				mobile = #{record.mobile,jdbcType=VARCHAR},
			</if>
			<if test="record.praiseCount != null">
				praise_count = #{record.praiseCount,jdbcType=INTEGER},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=VARCHAR},
			</if>
			<if test="record.createBy != null">
				create_by = #{record.createBy,jdbcType=VARCHAR},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateBy != null">
				update_by = #{record.updateBy,jdbcType=VARCHAR},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.isDeleted != null">
				is_deleted = #{record.isDeleted,jdbcType=BIT},
			</if>
			<if test="record.expertType != null">
				expert_type = #{record.expertType,jdbcType=INTEGER},
			</if>
			<if test="record.praiseInfo != null">
				praise_Info = #{record.praiseInfo,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.favorInfo != null">
				favor_Info = #{record.favorInfo,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.favorCount != null">
				favor_count = #{record.favorCount,jdbcType=INTEGER},
			</if>
			<if test="record.expertIndex != null">
				expert_Index = #{record.expertIndex,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update user_experts
		set uid = #{record.uid,jdbcType=BIGINT},
		name = #{record.name,jdbcType=VARCHAR},
		title = #{record.title,jdbcType=VARCHAR},
		sex = #{record.sex,jdbcType=INTEGER},
		description = #{record.description,jdbcType=VARCHAR},
		head_img_path = #{record.headImgPath,jdbcType=VARCHAR},
		email = #{record.email,jdbcType=VARCHAR},
		mobile = #{record.mobile,jdbcType=VARCHAR},
		praise_count = #{record.praiseCount,jdbcType=INTEGER},
		status = #{record.status,jdbcType=VARCHAR},
		create_by = #{record.createBy,jdbcType=VARCHAR},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		update_by = #{record.updateBy,jdbcType=VARCHAR},
		update_time = #{record.updateTime,jdbcType=TIMESTAMP},
		is_deleted = #{record.isDeleted,jdbcType=BIT},
		expert_type = #{record.expertType,jdbcType=INTEGER},
		praise_Info = #{record.praiseInfo,jdbcType=LONGVARCHAR},
		favor_Info = #{record.favorInfo,jdbcType=LONGVARCHAR},
		favor_count = #{record.favorCount,jdbcType=INTEGER},
		expert_Index = #{record.expertIndex,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user_experts
		set uid = #{record.uid,jdbcType=BIGINT},
		name = #{record.name,jdbcType=VARCHAR},
		title = #{record.title,jdbcType=VARCHAR},
		sex = #{record.sex,jdbcType=INTEGER},
		description = #{record.description,jdbcType=VARCHAR},
		head_img_path = #{record.headImgPath,jdbcType=VARCHAR},
		email = #{record.email,jdbcType=VARCHAR},
		mobile = #{record.mobile,jdbcType=VARCHAR},
		praise_count = #{record.praiseCount,jdbcType=INTEGER},
		status = #{record.status,jdbcType=VARCHAR},
		create_by = #{record.createBy,jdbcType=VARCHAR},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		update_by = #{record.updateBy,jdbcType=VARCHAR},
		update_time = #{record.updateTime,jdbcType=TIMESTAMP},
		is_deleted = #{record.isDeleted,jdbcType=BIT},
		expert_type = #{record.expertType,jdbcType=INTEGER},
		favor_Info = #{record.favorInfo,jdbcType=LONGVARCHAR},
		favor_count = #{record.favorCount,jdbcType=INTEGER},
		expert_Index = #{record.expertIndex,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.sinco.carnation.user.model.UserExperts">
		update user_experts
		<set>
			<if test="name != null and name != ''">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="title != null and title != ''">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="sex != null and sex != ''">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="description != null and description != ''">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="headImgPath != null and headImgPath != ''">
				head_img_path = #{headImgPath,jdbcType=VARCHAR},
			</if>
			<if test="email != null and email != ''">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null and mobile != ''">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="praiseCount != null and praiseCount != ''">
				praise_count = #{praiseCount,jdbcType=INTEGER},
			</if>
			<if test="status != null and status != ''">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="createBy != null and createBy != ''">
				create_by = #{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null and createTime != ''">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null and updateBy != ''">
				update_by = #{updateBy,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null and updateTime != ''">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDeleted != null and isDeleted != ''">
				is_deleted = #{isDeleted,jdbcType=BIT},
			</if>
			<if test="expertType != null and expertType != ''">
				expert_type = #{expertType,jdbcType=INTEGER},
			</if>
			<if test="praiseInfo != null and praiseInfo != ''">
				praise_Info = #{praiseInfo,jdbcType=LONGVARCHAR},
			</if>
			<if test="favorInfo != null and favorInfo != ''">
				favor_Info = #{favorInfo,jdbcType=LONGVARCHAR},
			</if>
			<if test="praiseInfo != null and praiseInfo != ''">
				favor_count = #{favorCount,jdbcType=INTEGER},
			</if>
			<if test="expertIndex != null and expertIndex != ''">
				expert_Index = #{expertIndex,jdbcType=INTEGER},
			</if>
		</set>
		where uid = #{uid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sinco.carnation.user.model.UserExperts">
		update user_experts
		set name = #{name,jdbcType=VARCHAR},
		title = #{title,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=INTEGER},
		description = #{description,jdbcType=VARCHAR},
		head_img_path = #{headImgPath,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		praise_count = #{praiseCount,jdbcType=INTEGER},
		status = #{status,jdbcType=VARCHAR},
		create_by = #{createBy,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_by = #{updateBy,jdbcType=VARCHAR},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		is_deleted = #{isDeleted,jdbcType=BIT},
		expert_type = #{expertType,jdbcType=INTEGER},
		praise_Info = #{praiseInfo,jdbcType=LONGVARCHAR},
		favor_Info = #{favorInfo,jdbcType=LONGVARCHAR},
		favor_count = #{favorCount,jdbcType=INTEGER},
		expert_Index = #{expertIndex,jdbcType=INTEGER}
		where uid = #{uid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sinco.carnation.user.model.UserExperts">
		update user_experts
		set name = #{name,jdbcType=VARCHAR},
		title = #{title,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=INTEGER},
		description = #{description,jdbcType=VARCHAR},
		head_img_path = #{headImgPath,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		praise_count = #{praiseCount,jdbcType=INTEGER},
		status = #{status,jdbcType=VARCHAR},
		create_by = #{createBy,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_by = #{updateBy,jdbcType=VARCHAR},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		is_deleted = #{isDeleted,jdbcType=BIT},
		expert_type = #{expertType,jdbcType=INTEGER},
		favor_Info = #{favorInfo,jdbcType=LONGVARCHAR},
		favor_count = #{favorCount,jdbcType=INTEGER},
		expert_Index = #{expertIndex,jdbcType=INTEGER}
		where uid = #{uid,jdbcType=BIGINT}
	</update>

	<select id="queryExpertsList" resultMap="ResultExpertsList">
		SELECT
		<include refid="Result_Experts_List" />
		from user_experts e INNER JOIN sys_user_account s ON (e.uid=s.uid and
		s.account_type = 2) where e.is_deleted=0
		<if test="vo.loginName != null and vo.loginName !=''">
			and s.login_name LIKE CONCAT('%',#{vo.loginName,jdbcType=VARCHAR},'%')
		</if>
		<if test="vo.name != null and vo.name !=''">
			and e.name LIKE CONCAT('%',#{vo.name,jdbcType=VARCHAR},'%')
		</if>
		<if test="vo.title != null and vo.title !=''">
			and e.title LIKE CONCAT('%',#{vo.title,jdbcType=VARCHAR},'%')
		</if>
		ORDER BY e.expert_Index
	</select>

	<select id="selectExpertsList" resultMap="ResultExpertsList">
		SELECT
		<include refid="Result_Experts_List" />
		FROM user_experts e INNER JOIN sys_user_account s ON (e.uid=s.uid and
		s.account_type = 2) WHERE expert_type=#{expertType,jdbcType=INTEGER}
		AND e.is_deleted=0
		ORDER BY expert_index ASC
	</select>
</mapper>