<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">
	<context:annotation-config />

	<task:annotation-driven />

	<!-- 把标记了@Controller等注解的类转换为bean -->
	<context:component-scan base-package="com.sinco.carnation" />

	<context:component-scan base-package="vc.thinker.b2b2c">
	</context:component-scan>

	<bean id="jerseyClientFactory" class="vc.thinker.b2b2c.core.security.token.JerseyClientFactory">
		<property name="readTimeout" value="${http.read.timeout}"></property>
		<property name="connectTimeout" value="${http.connect.timeout}"></property>
	</bean>
	
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" 
		/> -->
	<!--文件上传设置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>10485760</value><!-- 文件上传最大为10M -->
		</property>
		<property name="maxInMemorySize" value="4096" />
	</bean>
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean id="velocityCongfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath">
			<value>/</value>
		</property>
		<property name="velocityProperties">
			<props>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding ">UTF-8</prop>
			</props>
		</property>
	</bean>

	<bean id="velocitySecurityUtil" class="vc.thinker.web.velocity.VelocitySecurityUtil" />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" />
		<property name="viewClass" value="vc.thinker.web.velocity.VelocityToolbox2View" />
		<property name="contentType">
			<value>text/html;charset=UTF-8</value>
		</property>
		<property name="attributesMap">
			<map>
				<entry key="sec">
					<ref bean="velocitySecurityUtil" />
				</entry>
			</map>
		</property>
	</bean>
	<!--配置velocity engine默认路径 -->
	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath" value="/velocity/"></property>
	</bean>

	<!--配置拦截器, 多个拦截器,顺序执行 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
			<!-- 服务地区拦截器，用于设置用户当前地区 -->
			<mvc:mapping path="/group/**" />
			<mvc:mapping path="/buyer/**" />
			<mvc:mapping path="/life_**" />
			<mvc:mapping path="/order_life_**" />
			<mvc:mapping path="/goods_cart1_load.htm" />
			<bean class="vc.thinker.b2b2c.core.interceptor.LbsInterceptorAdapter">
				<property name="areaService" ref="areaServiceImpl"></property>
				<property name="dicContent" ref="dicContent"></property>
				<property name="defaultAreaCode" value="4524157"></property>
			</bean>
		</mvc:interceptor>
		<!-- 商户拦截器，用于判断商户状态 -->
		<mvc:interceptor>
			<mvc:mapping path="/seller/**" />
			<bean class="vc.thinker.b2b2c.core.interceptor.SellerInterceptorAdapter">
				<property name="storeService" ref="storeService"></property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<mvc:annotation-driven>
		<mvc:message-converters>
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>


	<!-- property-placeholder是一个属性遍历器，定位一个属性文件，属性文件存放的是jdbc一些连接数据 -->
	<context:property-placeholder
		location="classpath:application.properties,classpath:service.properties" />

	<mvc:resources location="/resources/" mapping="/resources/**" />
	<mvc:resources location="/favicon.ico" mapping="/favicon.ico" />
	<mvc:resources location="/MP_verify_9hq1LOmUTI2lU8WU.txt"
		mapping="/MP_verify_9hq1LOmUTI2lU8WU.txt" />

	<mvc:view-controller path="/" view-name="redirect:/index.htm" />

	<import resource="classpath:/dal-basic.xml" />
	<import resource="classpath:/dal.xml" />

	<import resource="classpath:/biz-basic.xml" />
	<import resource="classpath:/biz-sys.xml" />
	<import resource="classpath:/biz-user.xml" />
	<import resource="classpath:/biz-check.xml" />
	<import resource="classpath:/biz-shop.xml" />

</beans>